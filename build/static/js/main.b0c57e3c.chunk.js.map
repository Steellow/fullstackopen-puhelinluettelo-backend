{"version":3,"sources":["components/Filter.jsx","components/PersonForm.jsx","components/PersonList.jsx","components/Notification.jsx","services/persons.jsx","App.jsx","index.jsx"],"names":["Filter","value","onChange","PersonForm","onSubmit","nameValue","onNameChange","numberValue","onNumberChange","type","PersonList","persons","filter","handleDelete","person","name","toLowerCase","includes","map","number","onClick","id","Notification","message","color","className","style","baseUrl","exportObject","getAll","axios","get","then","res","data","create","newObject","post","deletePerson","console","log","delete","replace","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","msg","setMsg","msgColor","setMsgColor","useEffect","personService","showNotification","e","target","preventDefault","some","window","confirm","oldPerson","find","updatedPerson","returnedObject","catch","error","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0c57e3c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <form>\r\n      <div>\r\n        filter shown with <input value={value} onChange={onChange} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nconst PersonForm = ({ onSubmit, nameValue, onNameChange, numberValue, onNumberChange }) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input value={nameValue} onChange={onNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={numberValue} onChange={onNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst PersonList = ({ persons, filter, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {persons\r\n        .filter((person) => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n        .map((person) => (\r\n          <li key={person.name}>\r\n            {person.name} {person.number} <button onClick={() => handleDelete(person.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PersonList;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, color }) => {\r\n  if (message === null) return null;\r\n\r\n  return (\r\n    <div className=\"notification\" style={{ color: color }}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const promise = axios.get(baseUrl);\r\n  return promise.then((res) => res.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const promise = axios.post(baseUrl, newObject);\r\n  return promise.then((res) => res.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  console.log(\"Deleting \" + id);\r\n  axios.delete(baseUrl + \"/\" + id);\r\n};\r\n\r\nconst replace = (newObject) => {\r\n  const promise = axios.put(baseUrl + \"/\" + newObject.id, newObject);\r\n  return promise.then((res) => res.data);\r\n};\r\n\r\n// Creating object before exporting to avoid: 'Warning : Assign object to a variable before exporting as module default'\r\nconst exportObject = {\r\n  getAll,\r\n  create,\r\n  deletePerson,\r\n  replace,\r\n};\r\nexport default exportObject;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport PersonList from \"./components/PersonList\";\r\nimport Notification from \"./components/Notification\";\r\nimport personService from \"./services/persons\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [msg, setMsg] = useState(null);\r\n  const [msgColor, setMsgColor] = useState(\"green\");\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then((persons) => {\r\n      setPersons(persons);\r\n    });\r\n  }, []);\r\n\r\n  const addPerson = (e) => {\r\n    e.preventDefault();\r\n    if (persons.some((person) => person.name === newName)) {\r\n      if (window.confirm(\"Person is already added to the phonebook, do you want to replace the old number with a new one?\")) {\r\n        const oldPerson = persons.find((person) => person.name === newName);\r\n        const updatedPerson = { ...oldPerson, number: newNumber };\r\n        personService\r\n          .replace(updatedPerson)\r\n          .then((returnedObject) => {\r\n            setPersons(persons.map((person) => (person === oldPerson ? returnedObject : person)));\r\n            showNotification(`Modified ${newName}`, \"green\");\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n          })\r\n          .catch((error) => {\r\n            showNotification(`Information of ${newName} has already been removed from server`, \"red\");\r\n            setPersons(persons.filter((person) => person.name !== newName));\r\n          });\r\n      }\r\n    } else {\r\n      const newPerson = { name: newName, number: newNumber };\r\n      personService.create(newPerson).then((returnedObject) => {\r\n        setPersons(persons.concat(returnedObject));\r\n        showNotification(`Added ${newName}`, \"green\");\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const showNotification = (msg, color) => {\r\n    setMsg(msg);\r\n    setMsgColor(color);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      personService.deletePerson(id);\r\n      showNotification(`Deleted ${persons.find((person) => id === person.id).name}`, \"green\");\r\n      setPersons(persons.filter((person) => person.id !== id));\r\n    }\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={msg} color={msgColor} />\r\n      <Filter value={filter} onChange={handleFilterChange} />\r\n      <h2>add a new</h2>\r\n      <PersonForm\r\n        onSubmit={addPerson}\r\n        nameValue={newName}\r\n        onNameChange={handleNameChange}\r\n        numberValue={newNumber}\r\n        onNumberChange={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <PersonList persons={persons} filter={filter} handleDelete={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}